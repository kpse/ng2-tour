import {Component, OnInit, ViewChild, ViewContainerRef, ComponentFactoryResolver} from "@angular/core";
import {SimpleFormComponent} from "../simple-form/simple-form.component";

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {

  @ViewChild('autoGeneratedForms', {read: ViewContainerRef}) container;
  @ViewChild('myTemplate') template;

  newCreated;
  currentIndex;

  constructor(private resolver: ComponentFactoryResolver) {
  }

  ngOnInit() {
    this.currentIndex = -1;
  }

  ngAfterContentInit() {
    console.log(this.container);
    let componentFactory = this.resolver.resolveComponentFactory(SimpleFormComponent);
    this.container.createComponent(componentFactory);
    this.container.createComponent(componentFactory);
    this.container.createComponent(componentFactory);
    this.container.createComponent(componentFactory);
    let ref = this.container.createComponent(componentFactory);
    ref.instance.message = "I'm the last";
  }

  onClick() {
    if (this.currentIndex > 0) return;
    let componentFactory = this.resolver.resolveComponentFactory(SimpleFormComponent);
    this.newCreated = this.container.createComponent(componentFactory, 2);
    this.newCreated.instance.message = "I'm the third";
    this.currentIndex = 2;
  }

  onMove() {
    if (this.currentIndex < 0) return;
    this.currentIndex = Math.floor(Math.random() * this.container.length);
    this.container.move(this.newCreated.hostView, this.currentIndex);
  }

  onDelete() {
    if (this.currentIndex < 0) return;
    this.container.detach(this.currentIndex);
    this.currentIndex = -1;
  }

  onCreate() {
    this.container.createEmbeddedView(this.template, {
      description: 'sweet',
      desc: 'short sweet',
    })
  }
}
